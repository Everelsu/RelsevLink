@import url("https://fonts.googleapis.com/css2?family=VT323&display=swap");

:root {
  --primary-color: #000000;
  --accent-color: #00ff00;
  --text-color: #00ff00;
  --scanline-color: rgba(0, 255, 0, 0.1);
  --glitch-color: #ff00ff;
  --crt-flicker: rgba(0, 255, 0, 0.1);
  --border-color: #333;
  --control-color: #666;
  --shadow-color: rgba(0, 255, 0, 0.3);
}

* {
  -moz-user-select: none;
  -o-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: var(--primary-color);
  color: var(--text-color);
  font-family: 'VT323', monospace;
  min-height: 100vh;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  position: relative;
  overflow-y: auto;
  padding: 2rem 0;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at center, transparent 0%, rgba(0, 0, 0, 0.8) 100%),
    repeating-linear-gradient(0deg, rgba(0, 255, 0, 0.1) 0px, rgba(0, 255, 0, 0.1) 1px, transparent 1px, transparent 2px),
    repeating-linear-gradient(90deg, rgba(0, 255, 0, 0.1) 0px, rgba(0, 255, 0, 0.1) 1px, transparent 1px, transparent 2px);
  background-size: 100% 100%, 20px 20px, 20px 20px;
  animation: crt-flicker 0.15s infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes crt-flicker {
  0% { opacity: 0.97; }
  50% { opacity: 1; }
  100% { opacity: 0.98; }
}

.container {
  position: relative;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 2rem;
  z-index: 1;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.content {
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid var(--accent-color);
  border-radius: 0;
  padding: 2rem;
  box-shadow: 
    0 0 20px rgba(0, 255, 0, 0.3),
    inset 0 0 20px rgba(0, 255, 0, 0.1);
  position: relative;
  overflow: hidden;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.content::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(
      to bottom,
      transparent 50%,
      var(--scanline-color) 50%
    ),
    linear-gradient(
      to right,
      rgba(0, 255, 0, 0.1) 1px,
      transparent 1px
    );
  background-size: 100% 4px, 3px 100%;
  animation: scan 8s linear infinite;
  pointer-events: none;
}

.content::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at center,
    transparent 0%,
    rgba(0, 0, 0, 0.2) 100%
  );
  pointer-events: none;
}

@keyframes scan {
  0% { transform: translateY(0); }
  100% { transform: translateY(100%); }
}

.avatar {
  width: 150px;
  height: 150px;
  border-radius: 0;
  border: 2px solid var(--accent-color);
  margin: 0 auto 1.5rem;
  display: block;
  transition: all 0.3s ease;
  filter: grayscale(100%) contrast(120%) brightness(0.9);
  image-rendering: pixelated;
  position: relative;
  box-shadow: 
    0 0 20px rgba(0, 255, 0, 0.3),
    inset 0 0 20px rgba(0, 255, 0, 0.1);
}

.avatar::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 255, 0, 0.1) 0px,
    rgba(0, 255, 0, 0.1) 1px,
    transparent 1px,
    transparent 2px
  );
  animation: scan 4s linear infinite;
  pointer-events: none;
}

.avatar::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    transparent 0%,
    rgba(0, 255, 0, 0.1) 50%,
    transparent 100%
  );
  animation: shine 3s infinite;
}

@keyframes shine {
  0% { transform: translateX(-100%) rotate(45deg); }
  100% { transform: translateX(100%) rotate(45deg); }
}

.avatar:hover {
  filter: grayscale(0%) contrast(100%) brightness(1);
  transform: scale(1.05);
  box-shadow: 
    0 0 30px rgba(0, 255, 0, 0.5),
    inset 0 0 20px rgba(0, 255, 0, 0.2);
}

.animated-text {
  color: var(--text-color);
  font-size: 2.5rem;
  margin-bottom: 2rem;
  text-align: center;
  text-shadow: 
    0 0 10px var(--accent-color),
    0 0 20px var(--accent-color);
  position: relative;
  letter-spacing: 2px;
  animation: text-flicker 0.1s infinite;
}

@keyframes text-flicker {
  0% { opacity: 0.9; }
  50% { opacity: 1; }
  100% { opacity: 0.95; }
}

.buttons {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: auto;
}

.btn {
  background: transparent;
  color: var(--text-color);
  padding: 1rem;
  border: 2px solid var(--accent-color);
  text-decoration: none;
  text-align: center;
  font-size: 1.2rem;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  letter-spacing: 1px;
  text-shadow: 0 0 5px var(--accent-color);
  box-shadow: 
    0 0 10px var(--shadow-color),
    inset 0 0 10px var(--shadow-color);
  width: 100%;
  max-width: 400px;
  margin: 0 auto;
}

.btn::before {
  content: ">";
  position: absolute;
  left: 10px;
  opacity: 0;
  transition: all 0.3s ease;
  text-shadow: 0 0 5px var(--accent-color);
}

.btn::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(0, 255, 0, 0.1) 50%,
    transparent 100%
  );
  animation: btn-scan 3s infinite;
}

@keyframes btn-scan {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.btn:hover {
  background: var(--accent-color);
  color: var(--primary-color);
  text-shadow: none;
  transform: translateX(10px);
  box-shadow: 
    0 0 20px var(--shadow-color),
    inset 0 0 20px var(--shadow-color);
}

.btn:hover::before {
  opacity: 1;
}

.copied-message {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--primary-color);
  color: var(--text-color);
  padding: 1rem 2rem;
  border: 2px solid var(--accent-color);
  opacity: 0;
  transition: opacity 0.3s ease;
  text-shadow: 0 0 10px var(--accent-color);
  box-shadow: 
    0 0 20px rgba(0, 255, 0, 0.3),
    inset 0 0 20px rgba(0, 255, 0, 0.1);
  z-index: 1000;
}

.copied-message.show {
  opacity: 1;
}

.particle {
  position: absolute;
  pointer-events: none;
  border-radius: 0;
  background: var(--accent-color);
  opacity: 0.6;
  mix-blend-mode: screen;
}

.wave {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100px;
  background: rgba(15, 52, 96, 0.3);
  transform-origin: bottom;
}

.crt-screen {
  position: relative;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  background: #1a1a1a;
  border-radius: 20px;
  box-shadow: 
    0 0 30px var(--shadow-color),
    inset 0 0 30px var(--shadow-color);
  padding: 30px;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  border: 4px solid var(--border-color);
  position: relative;
}

.crt-screen::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at center, transparent 0%, rgba(0, 0, 0, 0.5) 100%),
    linear-gradient(to bottom, rgba(0, 255, 0, 0.1) 0%, transparent 50%, rgba(0, 255, 0, 0.1) 100%);
  pointer-events: none;
  z-index: 1;
}

.crt-screen::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 40px;
  background: linear-gradient(
    to top,
    #2a2a2a 0%,
    #1a1a1a 100%
  );
  border-radius: 0 0 16px 16px;
  border-top: 2px solid var(--accent-color);
}

.screen-border {
  position: relative;
  width: 100%;
  background: #000;
  border: 20px solid var(--border-color);
  border-radius: 10px;
  box-shadow: 
    inset 0 0 20px var(--shadow-color),
    0 0 20px var(--shadow-color);
  padding: 20px;
  flex: 1;
  display: flex;
  flex-direction: column;
  border-top: 40px solid var(--border-color);
  position: relative;
  overflow: hidden;
}

.screen-border::before {
  content: 'Relsev OS v1.0';
  position: absolute;
  top: -35px;
  left: 15px;
  color: var(--accent-color);
  font-size: 0.9rem;
  text-shadow: 0 0 5px var(--accent-color);
  letter-spacing: 2px;
}

.screen-border::after {
  content: '';
  position: absolute;
  top: -40px;
  left: 0;
  width: 100%;
  height: 40px;
  background: linear-gradient(to bottom, #2a2a2a 0%, #1a1a1a 100%);
  border-bottom: 2px solid var(--accent-color);
}

.power-button {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 20px;
  height: 20px;
  background: var(--control-color);
  border-radius: 50%;
  border: 2px solid var(--border-color);
  box-shadow: 
    inset 0 0 5px var(--shadow-color),
    0 0 5px var(--shadow-color);
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 2;
}

.power-button:hover {
  background: var(--accent-color);
  box-shadow: 
    inset 0 0 10px var(--shadow-color),
    0 0 10px var(--shadow-color);
}

.power-button::before {
  content: '‚ü≥';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-color);
  font-size: 12px;
  text-shadow: 0 0 5px var(--accent-color);
}

.screen-controls {
  position: absolute;
  bottom: 15px;
  right: 15px;
  display: flex;
  gap: 15px;
  z-index: 2;
}

.control-knob {
  width: 25px;
  height: 25px;
  background: var(--control-color);
  border-radius: 50%;
  border: 3px solid var(--border-color);
  box-shadow: 
    inset 0 0 10px var(--shadow-color),
    0 0 10px var(--shadow-color);
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
}

.control-knob::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 10px;
  height: 10px;
  background: var(--accent-color);
  border-radius: 50%;
  opacity: 0;
  transition: all 0.3s ease;
}

.control-knob:hover {
  transform: rotate(90deg);
  background: var(--accent-color);
  box-shadow: 
    inset 0 0 15px var(--shadow-color),
    0 0 15px var(--shadow-color);
}

.control-knob:hover::before {
  opacity: 1;
}

.system-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding: 0.5rem;
  background: rgba(0, 255, 0, 0.1);
  border: 1px solid var(--accent-color);
  position: relative;
}

.system-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: var(--accent-color);
  animation: header-scan 2s linear infinite;
}

@keyframes header-scan {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.system-text {
  color: var(--accent-color);
  text-shadow: 0 0 5px var(--accent-color);
  font-size: 0.9rem;
}

.date-text {
  color: var(--accent-color);
  text-shadow: 0 0 5px var(--accent-color);
  font-size: 0.9rem;
}

.command-line {
  margin: 1rem 0;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid var(--accent-color);
  font-family: 'VT323', monospace;
  font-size: 1.2rem;
  min-height: 100px;
  position: relative;
  overflow: hidden;
}

.command-line::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(0, 255, 0, 0.1) 50%,
    transparent 100%
  );
  animation: scan 8s linear infinite;
  pointer-events: none;
}

.prompt {
  color: var(--accent-color);
  text-shadow: 0 0 5px var(--accent-color);
  margin-right: 0.5rem;
}

.command {
  color: var(--accent-color);
  text-shadow: 0 0 5px var(--accent-color);
  white-space: pre;
  font-family: 'VT323', monospace;
  letter-spacing: 1px;
}

.cursor {
  display: inline-block;
  width: 8px;
  height: 16px;
  background: var(--accent-color);
  margin-left: 2px;
  animation: blink 1s infinite;
  vertical-align: middle;
  box-shadow: 0 0 5px var(--accent-color);
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

/* –ú–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
@media (max-width: 768px) {
  body {
    padding: 0;
    margin: 0;
    overflow-x: hidden;
    min-height: 100vh;
    touch-action: manipulation;
  }

  .crt-screen {
    width: 100%;
    height: 100vh;
    padding: 0;
    margin: 0;
    border-radius: 0;
    overflow: hidden;
  }

  .screen-border {
    padding: 10px;
    border-width: 10px;
    border-top-width: 20px;
    min-height: 100vh;
    position: relative;
  }

  .content {
    padding: 10px;
    gap: 15px;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }

  .avatar {
    width: 100px;
    height: 100px;
    margin: 10px auto;
    touch-action: manipulation;
  }

  .buttons {
    flex-direction: column;
    gap: 8px;
    margin-top: 15px;
    width: 100%;
    padding: 0 10px;
  }

  .btn {
    width: 100%;
    padding: 12px;
    font-size: 0.9rem;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .system-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 5px;
    padding: 5px;
    position: relative;
    z-index: 1;
  }

  .date-text {
    font-size: 0.8rem;
  }

  .command-line {
    margin: 0.5rem 0;
    padding: 0.5rem;
    min-height: 40px;
    font-size: 0.9rem;
    display: none;
  }

  .screen-controls {
    position: fixed;
    bottom: 15px;
    right: 15px;
    flex-direction: column;
    gap: 10px;
    z-index: 1000;
    touch-action: manipulation;
  }

  .control-knob {
    width: 20px;
    height: 20px;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .power-button {
    top: 10px;
    right: 10px;
    width: 20px;
    height: 20px;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  /* –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation: none !important;
      transition: none !important;
    }
  }

  /* –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
  .crt-screen::before,
  .command-line::before,
  .noise,
  .scanline {
    display: none;
  }

  /* –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
  .crt-screen {
    transform: none !important;
    filter: none !important;
  }

  .btn:hover {
    transform: none !important;
  }

  /* –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
  .content > * {
    position: relative;
    z-index: 1;
  }

  .screen-controls {
    z-index: 2;
  }

  /* –£–ª—É—á—à–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞ */
  .animated-text {
    font-size: 1.2rem;
    line-height: 1.2;
  }

  .system-text {
    font-size: 0.8rem;
  }

  /* –£–ª—É—á—à–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ */
  .btn:active {
    transform: scale(0.95);
    opacity: 0.8;
  }

  .control-knob:active {
    transform: rotate(90deg);
  }

  .power-button:active {
    transform: scale(0.9);
  }
}

/* –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ */
@media (max-width: 480px) {
  .animated-text {
    font-size: 1rem;
  }

  .system-text {
    font-size: 0.7rem;
  }

  .command-line {
    display: none;
  }

  .btn {
    padding: 10px;
    font-size: 0.8rem;
  }

  .screen-controls {
    bottom: 10px;
    right: 10px;
  }

  .control-knob {
    width: 18px;
    height: 18px;
  }

  .power-button {
    width: 18px;
    height: 18px;
  }
}

/* –î–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏—è */
@media (min-width: 769px) {
  .container {
    max-width: 800px;
  }

  .content {
    padding: 3rem;
  }

  .avatar {
    width: 200px;
    height: 200px;
  }

  .animated-text {
    font-size: 3rem;
  }

  .btn {
    font-size: 1.2rem;
    padding: 1rem;
  }
}

.secret-mode {
  animation: secret-flicker 0.1s infinite;
}

@keyframes secret-flicker {
  0% { filter: hue-rotate(0deg); }
  50% { filter: hue-rotate(180deg); }
  100% { filter: hue-rotate(360deg); }
}

.secret-message {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.9);
  color: #ff00ff;
  padding: 20px;
  border: 2px solid #ff00ff;
  border-radius: 5px;
  font-size: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1000;
  text-shadow: 0 0 10px #ff00ff;
  box-shadow: 0 0 20px #ff00ff;
  animation: message-pulse 2s infinite;
}

@keyframes message-pulse {
  0% { transform: translate(-50%, -50%) scale(1); }
  50% { transform: translate(-50%, -50%) scale(1.05); }
  100% { transform: translate(-50%, -50%) scale(1); }
}

.secret-message.show {
  opacity: 1;
}

.power-off {
  filter: brightness(0);
  transition: filter 0.5s ease;
}

/* –≠—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —Ä–µ–∂–∏–º–∞ –≥–ª—é–∫–∞ */
.glitch-effect {
  animation: glitch 0.3s infinite;
}

@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–µ–∫—Ä–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ */
.secret-mode .btn {
  animation: btn-glow 2s infinite;
}

@keyframes btn-glow {
  0% { box-shadow: 0 0 10px #ff00ff; }
  50% { box-shadow: 0 0 20px #ff00ff, 0 0 30px #ff00ff; }
  100% { box-shadow: 0 0 10px #ff00ff; }
}

/* –≠—Ñ—Ñ–µ–∫—Ç –º–µ—Ä—Ü–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
.secret-mode .content {
  animation: content-flicker 0.1s infinite;
}

@keyframes content-flicker {
  0% { opacity: 1; }
  50% { opacity: 0.9; }
  100% { opacity: 1; }
}

/* –£–ª—É—á—à–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
.btn {
  position: relative;
  overflow: hidden;
  transition: all 0.2s ease;
}

.btn::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.btn:hover::after {
  transform: translateX(0);
}

.control-knob {
  transition: transform 0.2s ease;
}

.power-button {
  transition: transform 0.2s ease;
}